vlmazbastion01.fisdev.local
ssh vemaztechtrg321admin@10.33.65.20

--------------------------Day1-------------------------------------------

1. sudo yum install -y yum-utils

2. sudo yum-config-manager \
    --add-repo \
https://download.docker.com/linux/centos/docker-ce.repo

3. sudo vi /etc/yum.repos.d/docker-ce.repo

4. sudo yum install --nobest docker-ce

5. Change mount path by editing file - vi /etc/docker/daemon.json
{
    "storage-driver": "overlay2",
    "data-root": "/mnt/training/binaries/docker/lib",
    "exec-root": "/mnt/training/binaries/docker/run",
    "selinux-enabled": true,
    "experimental": true,
    "log-driver": "json-file",
    "log-opts": {
    "max-size": "100m",
    "max-file": "5"
    },
    "group": "root"
}


6. sudo systemctl daemon-reload
7. sudo systemctl start docker
8. docker info
9. docker run -it --name nginx -p8080:80 nginx (docker run -it -d --name nginx -p8080:80 nginx)  docker ps -a

-->Additional
https://newbedev.com/shell-error-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket-at-unix-var-run-docker-sock-get-http-2fvar-2frun-2fdocker-sock-v1-24-info-dial-unix-var-run-docker-sock-connect-permission-denied-code-example
sudo chmod 666 /var/run/docker.sock
sudo newgrp docker
sudo chmod 666  /var/run/docker.sock
sudo usermod -aG docker ${USER}


docker ps -a
docker start inginx
docker rm -f inginx
docker exec -it mynginxchange /bin/bash
clear
dockerp s -a
docker ps -a
docker commit -m"fixed issue created hell.txt" mynginxchange nginx-hello:1.0
docker images
docker run -it -d --name fixed -p8082:80 nginx-hello:1.0
docker ps -a
docker exec -it fixed /bin/bash
docker inspect nginx-hello:1.0
clear
dockerp s -a
docker ps -a
docker stop nginx-hello:1.0
docker stop fixed
docker ps -a
docker start fixed


---------------------Docker Volume & Network-------------------------
docker volume ls
docker volume inspect mydemo
sudo ls /mnt/training/binaries/docker/lib/volumes/mydemo/_data
sudo cat /mnt/training/binaries/docker/lib/volumes/mydemo/_data
sudo cat /mnt/training/binaries/docker/lib/volumes/mydemo/_data/cont1.t
#docker volume rm mydemo
#docker volume prune -a
docker volume prune -a
docker volume prune -f
docker volume ls
ls -ltr
ls myapp/
docker volume create newvol
docker run -it -d --name ub1 -vnewvol:/tmp ubuntu
docker inspect ub1
docker inspect ubuntu
docker network ls
ifconfig
docker network ls
#docker network create -d bridge mynetwork
docker ps -a
docker inspect ub1
docker network inspect bridge
docker ps -a
docker network inspect -d bridge mynetwork
docker network create -d bridge mynetwork
docker network ls
docker run -it -d --name ub2 --network mynetwork ubuntu
docker ps -a
docker network inspect mynetwork
docker network inspect bridge
docker inspect ub2
docker network inspect mynetwork

----------------------------------------Docker File-------------------------------------------------
cat Dockerfile
FROM ubuntu:latest
LABEL supportemail=jitesh.agarwal@fisglobal.com
ENV LOGPATH=/tmp/log
RUN mkdir /tmp/log
RUN mkdir /tmp/myapp
COPY ./hello.sh /tmp/myapp
WORKDIR /tmp/myapp
CMD ["/bin/bash", "./hello.sh"]
#CMD ["echo", "Hello-world"]
[vemaztechtrg301admin@vemaztechtrg301 dockerdemo]$ cat Dockerfile1.0
FROM ubuntu:latest
LABEL supportemail=jitesh.agarwal@fisglobal.com
ENV LOGPATH=/tmp/log
RUN mkdir /tmp/log \
     /tmp/myappcp \
     /tmp/myappadd
COPY demo.tar /tmp/myappcp
ADD demo.tar /tmp/myappadd

#COPY ./hello.sh /tmp/myappcp

WORKDIR /tmp/myapp

RUN ls /tmp

#CMD ["/bin/bash", "./hello.sh"]
CMD ["echo", "Hello-world"]
[vemaztechtrg301admin@vemaztechtrg301 dockerdemo]$ cat DockerfileEntry
FROM ubuntu:latest
LABEL supportemail=jitesh.agarwal@fisglobal.com
ENV LOGPATH=/tmp/log
RUN mkdir /tmp/log \
     /tmp/myappcp \
     /tmp/myappadd
COPY demo.tar /tmp/myappcp
ADD demo.tar /tmp/myappadd

#COPY ./hello.sh /tmp/myappcp

WORKDIR /tmp/myapp

RUN ls /tmp

#CMD ["/bin/bash", "./hello.sh"]
#CMD ["echo", "Hello-world"]
ENTRYPOINT ["echo", "Hello-world"]


-------------------------------Docker Compose-----------------
Â Installing docker-compose
curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
sudo mv docker-compose /usr/local/bin && sudo chmod +x /usr/local/bin/docker-compose
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose 

[11:51 AM] Agarwal, Jitesh
docker network create mongo-network
docker run -d -p 27017:27017 -eMONGO_INITDB_ROOT_USERNAME=admin -eMONGO_INITDB_ROOT_PASSWORD=password --net mongo-network --name mongodb mongo
docker run -d \
-p 8081:8081 \
-e ME_CONFIG_MONGODB_ADMINUSERNAME=admin \
-e ME_CONFIG_MONGODB_ADMINPASSWORD=password \
-e ME_CONFIG_MONGODB_SERVER=mongodb \
--net mongo-network \
--name mongo-express \
mongo-express

vi docker-compose.yaml
docker network ls
docker-compose up -d
docker ps -a
docker volume ls
docker ps -a
docker-compose stop
docker ps -
docker-compose down
docker ps -a
docker network ls
docker volume ls
docker-compose up -d 
docker ps -a
docker volume ls

